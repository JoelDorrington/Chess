<div class="gameHistory">
    @if(History != null){
        @for (int i = 0; i < History.Count; i += 2)
        {
            <span class="moveNumber">
                @(
                    i / 2 + 1
                    ).
            </span>
            if (History[i].movePlayed != null)
            {
                int currentIndex = i;
                Board thisBoard = History[currentIndex];
                <span class="moveNotation" @onclick="() => OnSelectMove.InvokeAsync(currentIndex+1)">
                    @thisBoard.GetMoveNotation()@(thisBoard.movePlayed != null && thisBoard.movePlayed.result != null ? "" : ",")&nbsp;
                </span>

                if (currentIndex + 1 < History.Count)
                {
                    Board nextBoard = History[currentIndex + 1];
                    if (nextBoard.movePlayed != null)
                    {
                        <span class="moveNotation" @onclick="() => OnSelectMove.InvokeAsync(currentIndex+2)">@nextBoard.GetMoveNotation()&nbsp;</span>
                    }
                    else if (nextBoard.lastMove == null || nextBoard.lastMove.result == null)
                    {
                        <span class="moveNotation">...</span>
                    }
                }
            }
            else
            {
                <span class="moveNotation">...</span>
            }
        }
    }
</div>

@code {
    [Parameter]
    public List<Board>? History { get; set; }

    [Parameter]
    public EventCallback<int> OnSelectMove { get; set; }
}
